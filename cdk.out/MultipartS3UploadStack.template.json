{
 "Resources": {
  "documentuploadbucket1B3E1E18": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccelerateConfiguration": {
     "AccelerationStatus": "Enabled"
    },
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "document-client-upload-randnumber2",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "POST"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "ETag"
       ]
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 1
       },
       "ExpirationInDays": 10,
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/document-upload-bucket/Resource"
   }
  },
  "documentuploadbucketPolicy6ED1FE5A": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "documentuploadbucket1B3E1E18"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "documentuploadbucket1B3E1E18",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "documentuploadbucket1B3E1E18",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/document-upload-bucket/Policy/Resource"
   }
  },
  "multipartuploadapiFF1148FC": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for multipart s3 upload",
    "Name": "multi-part-upload-api",
    "Policy": {
     "Statement": [
      {
       "Action": "execute-api:Invoke",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": "execute-api:/*/*/*"
      },
      {
       "Action": "execute-api:Invoke",
       "Condition": {
        "NotIpAddress": {
         "aws:SourceIp": []
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": "execute-api:/*/*/*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Resource"
   }
  },
  "multipartuploadapiCloudWatchRole6B12FF78": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/CloudWatchRole/Resource"
   }
  },
  "multipartuploadapiAccount291DE67A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "multipartuploadapiCloudWatchRole6B12FF78",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "multipartuploadapiFF1148FC"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Account"
   }
  },
  "multipartuploadapiDeployment43AC0864172ba1a449164bae9ba845e6604fcc2c": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "Description": "API for multipart s3 upload"
   },
   "DependsOn": [
    "multipartuploadapifinalizeOPTIONS87B549F7",
    "multipartuploadapifinalizePOST2B336F95",
    "multipartuploadapifinalize1FD6DE16",
    "multipartuploadapigetPreSignedTAUrlsOPTIONSBBD4D70B",
    "multipartuploadapigetPreSignedTAUrlsPOSTC62D5EEA",
    "multipartuploadapigetPreSignedTAUrls47F7BD53",
    "multipartuploadapigetPreSignedUrlsOPTIONS8B6E88FA",
    "multipartuploadapigetPreSignedUrlsPOST99EB054A",
    "multipartuploadapigetPreSignedUrls355A3C7D",
    "multipartuploadapiinitializeOPTIONSC5155B2E",
    "multipartuploadapiinitializePOST2EB016F3",
    "multipartuploadapiinitialize54DA452D",
    "multipartuploadapiOPTIONS62DCD1F2"
   ],
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Deployment/Resource"
   }
  },
  "multipartuploadapiDeploymentStageprod84C743B6": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "DeploymentId": {
     "Ref": "multipartuploadapiDeployment43AC0864172ba1a449164bae9ba845e6604fcc2c"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "multipartuploadapiAccount291DE67A"
   ],
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/DeploymentStage.prod/Resource"
   }
  },
  "multipartuploadapiOPTIONS62DCD1F2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "multipartuploadapiFF1148FC",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/OPTIONS/Resource"
   }
  },
  "multipartuploadapiinitialize54DA452D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "multipartuploadapiFF1148FC",
      "RootResourceId"
     ]
    },
    "PathPart": "initialize",
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/initialize/Resource"
   }
  },
  "multipartuploadapiinitializeOPTIONSC5155B2E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "multipartuploadapiinitialize54DA452D"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/initialize/OPTIONS/Resource"
   }
  },
  "multipartuploadapiinitializePOSTApiPermissionMultipartS3UploadStackmultipartuploadapi43719A7BPOSTinitializeB4B1A79A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "initializeHandlerEED63CA7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/",
       {
        "Ref": "multipartuploadapiDeploymentStageprod84C743B6"
       },
       "/POST/initialize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/initialize/POST/ApiPermission.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..initialize"
   }
  },
  "multipartuploadapiinitializePOSTApiPermissionTestMultipartS3UploadStackmultipartuploadapi43719A7BPOSTinitialize27D23130": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "initializeHandlerEED63CA7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/test-invoke-stage/POST/initialize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/initialize/POST/ApiPermission.Test.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..initialize"
   }
  },
  "multipartuploadapiinitializePOST2EB016F3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "multipartuploadapiinitialize54DA452D"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "initializeHandlerEED63CA7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/initialize/POST/Resource"
   }
  },
  "multipartuploadapigetPreSignedUrls355A3C7D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "multipartuploadapiFF1148FC",
      "RootResourceId"
     ]
    },
    "PathPart": "getPreSignedUrls",
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedUrls/Resource"
   }
  },
  "multipartuploadapigetPreSignedUrlsOPTIONS8B6E88FA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "multipartuploadapigetPreSignedUrls355A3C7D"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedUrls/OPTIONS/Resource"
   }
  },
  "multipartuploadapigetPreSignedUrlsPOSTApiPermissionMultipartS3UploadStackmultipartuploadapi43719A7BPOSTgetPreSignedUrlsD571B1DE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getPreSignedUrlsHandlerE482A024",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/",
       {
        "Ref": "multipartuploadapiDeploymentStageprod84C743B6"
       },
       "/POST/getPreSignedUrls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedUrls/POST/ApiPermission.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..getPreSignedUrls"
   }
  },
  "multipartuploadapigetPreSignedUrlsPOSTApiPermissionTestMultipartS3UploadStackmultipartuploadapi43719A7BPOSTgetPreSignedUrls12DCC697": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getPreSignedUrlsHandlerE482A024",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/test-invoke-stage/POST/getPreSignedUrls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedUrls/POST/ApiPermission.Test.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..getPreSignedUrls"
   }
  },
  "multipartuploadapigetPreSignedUrlsPOST99EB054A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "multipartuploadapigetPreSignedUrls355A3C7D"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getPreSignedUrlsHandlerE482A024",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedUrls/POST/Resource"
   }
  },
  "multipartuploadapigetPreSignedTAUrls47F7BD53": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "multipartuploadapiFF1148FC",
      "RootResourceId"
     ]
    },
    "PathPart": "getPreSignedTAUrls",
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedTAUrls/Resource"
   }
  },
  "multipartuploadapigetPreSignedTAUrlsOPTIONSBBD4D70B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "multipartuploadapigetPreSignedTAUrls47F7BD53"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedTAUrls/OPTIONS/Resource"
   }
  },
  "multipartuploadapigetPreSignedTAUrlsPOSTApiPermissionMultipartS3UploadStackmultipartuploadapi43719A7BPOSTgetPreSignedTAUrlsE320E10C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getPreSignedTAUrlsHandler7D8E0C67",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/",
       {
        "Ref": "multipartuploadapiDeploymentStageprod84C743B6"
       },
       "/POST/getPreSignedTAUrls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedTAUrls/POST/ApiPermission.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..getPreSignedTAUrls"
   }
  },
  "multipartuploadapigetPreSignedTAUrlsPOSTApiPermissionTestMultipartS3UploadStackmultipartuploadapi43719A7BPOSTgetPreSignedTAUrlsEF121379": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getPreSignedTAUrlsHandler7D8E0C67",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/test-invoke-stage/POST/getPreSignedTAUrls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedTAUrls/POST/ApiPermission.Test.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..getPreSignedTAUrls"
   }
  },
  "multipartuploadapigetPreSignedTAUrlsPOSTC62D5EEA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "multipartuploadapigetPreSignedTAUrls47F7BD53"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getPreSignedTAUrlsHandler7D8E0C67",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/getPreSignedTAUrls/POST/Resource"
   }
  },
  "multipartuploadapifinalize1FD6DE16": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "multipartuploadapiFF1148FC",
      "RootResourceId"
     ]
    },
    "PathPart": "finalize",
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/finalize/Resource"
   }
  },
  "multipartuploadapifinalizeOPTIONS87B549F7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "multipartuploadapifinalize1FD6DE16"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/finalize/OPTIONS/Resource"
   }
  },
  "multipartuploadapifinalizePOSTApiPermissionMultipartS3UploadStackmultipartuploadapi43719A7BPOSTfinalizeD64FAE2C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "finalizeHandlerEEE067CE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/",
       {
        "Ref": "multipartuploadapiDeploymentStageprod84C743B6"
       },
       "/POST/finalize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/finalize/POST/ApiPermission.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..finalize"
   }
  },
  "multipartuploadapifinalizePOSTApiPermissionTestMultipartS3UploadStackmultipartuploadapi43719A7BPOSTfinalizeCDD5382A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "finalizeHandlerEEE067CE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "multipartuploadapiFF1148FC"
       },
       "/test-invoke-stage/POST/finalize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/finalize/POST/ApiPermission.Test.MultipartS3UploadStackmultipartuploadapi43719A7B.POST..finalize"
   }
  },
  "multipartuploadapifinalizePOST2B336F95": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "multipartuploadapifinalize1FD6DE16"
    },
    "RestApiId": {
     "Ref": "multipartuploadapiFF1148FC"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "finalizeHandlerEEE067CE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/Default/finalize/POST/Resource"
   }
  },
  "multipartuploadapiusageplan724587CD": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "multipartuploadapiFF1148FC"
      },
      "Stage": {
       "Ref": "multipartuploadapiDeploymentStageprod84C743B6"
      },
      "Throttle": {}
     }
    ],
    "Description": "usage plan for consumerA",
    "Throttle": {
     "BurstLimit": 200,
     "RateLimit": 100
    },
    "UsagePlanName": "consumerA-multi-part-upload-plan"
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/multi-part-upload-api/usage-plan/Resource"
   }
  },
  "initializeHandlerServiceRole1012F68E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/initializeHandler/ServiceRole/Resource"
   }
  },
  "initializeHandlerServiceRoleDefaultPolicy4F1E9044": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "documentuploadbucket1B3E1E18",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "documentuploadbucket1B3E1E18",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "initializeHandlerServiceRoleDefaultPolicy4F1E9044",
    "Roles": [
     {
      "Ref": "initializeHandlerServiceRole1012F68E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/initializeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "initializeHandlerEED63CA7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3ea32624ce5c1cfe02dc367a3aa1c0fc464cb639badea0e96b71f43a74336997.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "initializeHandlerServiceRole1012F68E",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "documentuploadbucket1B3E1E18"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "multipart-upload-initialize-randnumber2",
    "Handler": "index.handler",
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "initializeHandlerServiceRoleDefaultPolicy4F1E9044",
    "initializeHandlerServiceRole1012F68E"
   ],
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/initializeHandler/Resource",
    "aws:asset:path": "asset.3ea32624ce5c1cfe02dc367a3aa1c0fc464cb639badea0e96b71f43a74336997",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getPreSignedUrlsHandlerServiceRoleEA6B60FF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/getPreSignedUrlsHandler/ServiceRole/Resource"
   }
  },
  "getPreSignedUrlsHandlerServiceRoleDefaultPolicyED58BD00": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "documentuploadbucket1B3E1E18",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "documentuploadbucket1B3E1E18",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getPreSignedUrlsHandlerServiceRoleDefaultPolicyED58BD00",
    "Roles": [
     {
      "Ref": "getPreSignedUrlsHandlerServiceRoleEA6B60FF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/getPreSignedUrlsHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getPreSignedUrlsHandlerE482A024": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "56b6a33adf069ab12cffa7399e72b463a59f1f8ca7e4c85b3ec0b34e9c8e2a51.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "getPreSignedUrlsHandlerServiceRoleEA6B60FF",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "documentuploadbucket1B3E1E18"
      },
      "URL_EXPIRES": "300",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "multipart-upload-getPreSignedUrls-randnumber2",
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 3
   },
   "DependsOn": [
    "getPreSignedUrlsHandlerServiceRoleDefaultPolicyED58BD00",
    "getPreSignedUrlsHandlerServiceRoleEA6B60FF"
   ],
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/getPreSignedUrlsHandler/Resource",
    "aws:asset:path": "asset.56b6a33adf069ab12cffa7399e72b463a59f1f8ca7e4c85b3ec0b34e9c8e2a51",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getPreSignedTAUrlsHandlerServiceRoleC94A90B6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/getPreSignedTAUrlsHandler/ServiceRole/Resource"
   }
  },
  "getPreSignedTAUrlsHandlerServiceRoleDefaultPolicy41F8BB0A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "documentuploadbucket1B3E1E18",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "documentuploadbucket1B3E1E18",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getPreSignedTAUrlsHandlerServiceRoleDefaultPolicy41F8BB0A",
    "Roles": [
     {
      "Ref": "getPreSignedTAUrlsHandlerServiceRoleC94A90B6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/getPreSignedTAUrlsHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getPreSignedTAUrlsHandler7D8E0C67": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fdf65e9e62a2cbbda235cc540c323e04f3f54bb58847aeae1aec88a63117553a.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "getPreSignedTAUrlsHandlerServiceRoleC94A90B6",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "documentuploadbucket1B3E1E18"
      },
      "URL_EXPIRES": "300",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "multipart-upload-getPreSignedTAUrls-randnumber2",
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 3
   },
   "DependsOn": [
    "getPreSignedTAUrlsHandlerServiceRoleDefaultPolicy41F8BB0A",
    "getPreSignedTAUrlsHandlerServiceRoleC94A90B6"
   ],
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/getPreSignedTAUrlsHandler/Resource",
    "aws:asset:path": "asset.fdf65e9e62a2cbbda235cc540c323e04f3f54bb58847aeae1aec88a63117553a",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "finalizeHandlerServiceRole0DEB346D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/finalizeHandler/ServiceRole/Resource"
   }
  },
  "finalizeHandlerServiceRoleDefaultPolicy2A438EB3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "documentuploadbucket1B3E1E18",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "documentuploadbucket1B3E1E18",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "finalizeHandlerServiceRoleDefaultPolicy2A438EB3",
    "Roles": [
     {
      "Ref": "finalizeHandlerServiceRole0DEB346D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/finalizeHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "finalizeHandlerEEE067CE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4f77ab0b6b7e86997011b38391eaf880d5775e2727d9c75d00f70346f6131c67.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "finalizeHandlerServiceRole0DEB346D",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "documentuploadbucket1B3E1E18"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "multipart-upload-finalize-randnumber2",
    "Handler": "index.handler",
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "finalizeHandlerServiceRoleDefaultPolicy2A438EB3",
    "finalizeHandlerServiceRole0DEB346D"
   ],
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/finalizeHandler/Resource",
    "aws:asset:path": "asset.4f77ab0b6b7e86997011b38391eaf880d5775e2727d9c75d00f70346f6131c67",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQyW7CMBD9Fu7GpXDhGqh6a4uoeo4GZ5pO4thRxi6Kovx77TgpIFl6y+zeyv1GblZw5bUq6rWmixw+HahaBCsfeCeHg1c1OnH8NjNLcLKaVH+zZ53EARhHAS2V4PAKvRzOyC5rKebf0Uwp640TL9hq2zdopjl3KuxSYvQSCaXWdwpjf/GG7scWMTizJToPSfyLQ+FJg4nuvxgFQRO2sjplR7xdlNgoNDSXAuQQLewaYiY79Xn1RrnAl5Tc2AIrlu8TLFHBuxyY0bHMIowPG35413onpki8jkz5sHjgR2sKSnPiAFnx0+/zXoa3XVVMtO7C51GD8pzwDy9UDxDOAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "MultipartS3UploadStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "multipartuploadapiEndpointA06870A1": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "multipartuploadapiFF1148FC"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "multipartuploadapiDeploymentStageprod84C743B6"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}